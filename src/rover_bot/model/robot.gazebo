<?xml version="1.0"?>
<robot>
<gazebo reference="body_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Red</material>
</gazebo>

<gazebo reference="wheel1_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel2_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel3_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel4_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>


<gazebo reference="lidar_link">
<material>Gazebo/Black</material>
</gazebo>





<!--- controller for 4 wheel robot -->
<gazebo>
 <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
	
	<ros>
		<namespace> </namespace>
	</ros>
	
	<!-- number of wheel pairs -->
	<num_wheel_pairs>2</num_wheel_pairs>
	
	<!-- wheels0 -->
	<left_joint>wheel4_joint</left_joint>
	<right_joint>wheel3_joint</right_joint>
	
	<!-- wheels1 -->
	<left_joint>wheel2_joint</left_joint>
	<right_joint>wheel1_joint</right_joint>
	
	
	<!-- kinematics -->
	<wheel_separation>${body_link_y_dim+wheel_link_length}</wheel_separation>
	<wheel_separation>${body_link_y_dim+wheel_link_length}</wheel_separation>
	
	<wheel_diameter>${wheel_link_radius}</wheel_diameter>
	<wheel_diameter>${wheel_link_radius}</wheel_diameter>
	
	<!-- limits -->
	<max_wheel_torque>1000</max_wheel_torque>
	<max_wheel_acceleration>5.0</max_wheel_acceleration>
	
	<!-- output -->
	<publish_odom>true</publish_odom>
	<publish_odom_tf>true</publish_odom_tf>
	<publish_wheel_tf>true</publish_wheel_tf>
	
	<odometry_frame>odom</odometry_frame>
	<robot_base_frame>dummy</robot_base_frame>
	
 </plugin>
</gazebo>


<gazebo reference="lidar_link">
	<sensor name="laser" type="ray">
            
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.5707</min_angle>
                        <max_angle>1.5707</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>10.0</max>
                </range>
                <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
	</sensor>
</gazebo>



<gazebo reference="camera_link">
    <sensor name="camera" type="camera">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <camera>
            <horizontal_fov>1.089</horizontal_fov>
            <image>
                <format>R8G8B8</format>
                <width>640</width>
                <height>480</height>
            </image>
            <clip>
                <near>0.05</near>
                <far>8.0</far>
            </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <frame_name>camera_link_optical</frame_name>
        </plugin>
    </sensor>
</gazebo>



<!--2nd camera-->
<gazebo reference="camera2_link">
    <sensor name="camera" type="camera">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <camera>
            <horizontal_fov>1.089</horizontal_fov>
            <image>
                <format>R8G8B8</format>
                <width>640</width>
                <height>480</height>
            </image>
            <clip>
                <near>0.05</near>
                <far>8.0</far>
            </clip>
        </camera>
        <plugin name="camera2_controller" filename="libgazebo_ros_camera.so">
            <frame_name>camera2_link_optical</frame_name>
        </plugin>
    </sensor>
</gazebo>

<!--trying multi camera-->

<!-- <gazebo reference="left_camera_frame">
  <sensor type="multicamera" name="stereo_camera">
    <update_rate>30.0</update_rate>

    <camera name="left">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>

    <camera name="right">
      <pose>0 -0.07 0 0 0 0</pose>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>

    <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>stereo/camera</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>left_camera_frame</frameName>
      <rightFrameName>right_camera_frame</rightFrameName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </sensor>
</gazebo> -->















</robot>	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
